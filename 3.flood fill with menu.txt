import matplotlib.pyplot as plt
import numpy as np

grid_size = 20
grid = np.ones((grid_size, grid_size))

def putpixel(x, y, color):
    if 0 <= x < grid_size and 0 <= y < grid_size:
        grid[y, x] = color

def getpixel(x, y):
    if 0 <= x < grid_size and 0 <= y < grid_size:
        return grid[y, x]
    return -1

def flood_fill(x, y, fill_color, target_color):
    if getpixel(x, y) == target_color:
        putpixel(x, y, fill_color)
        flood_fill(x + 1, y, fill_color, target_color)
        flood_fill(x - 1, y, fill_color, target_color)
        flood_fill(x, y + 1, fill_color, target_color)
        flood_fill(x, y - 1, fill_color, target_color)

def plot_grid():
    plt.imshow(grid, cmap='gray', origin='lower')
    plt.axis('off')
    plt.show()

def reset_grid():
    global grid
    grid = np.ones((grid_size, grid_size))

def main():
    for x in range(5, 15):
        putpixel(x, 5, 0)
        putpixel(x, 15, 0)
    for y in range(5, 16):
        putpixel(5, y, 0)
        putpixel(15, y, 0)

    while True:
        print("\nMenu:")
        print("1. Show the grid")
        print("2. Fill color")
        print("3. Reset the grid")
        print("4. Exit")

        choice = input("Enter your choice (1-4): ")

        if choice == '1':
            plot_grid()
        elif choice == '2':
            seed_x = int(input("Enter x-coordinate for flood fill (0-19): "))
            seed_y = int(input("Enter y-coordinate for flood fill (0-19): "))
            fill_color = float(input("Enter fill color (0.0 to 1.0): "))
            flood_fill(seed_x, seed_y, fill_color, 1)
            plot_grid()
        elif choice == '3':
            reset_grid()
            print("Grid has been reset.")
        elif choice == '4':
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
